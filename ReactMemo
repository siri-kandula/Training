TRAINING CLASS
React memo:
•	It is a HOC (high order component) is not a React hook
•	It will stop unnecessary- rendering of functional components of its props
•	It will improve the performance of functional components
Example:
App.js:
import {useState} from 'react';
import ChildA from "./ChildA";
import ChildB from "./ChildB";

const Parent=()=>{
  const [count, setCount]=useState(0);
  const increment=()=>{
    setCount(c=>c+1);
  };
  return (
    <div>
      <ChildA/>
      <ChildB count={count} increment={increment}/>
    </div>
  )
};
export default Parent;

ChildA.js:
const ChildA=()=>{
    console.log("Child A rendered")
        return <h2>This is Child A</h2>
}
export default ChildA;

ChildB.js:
const ChildB=({count, increment})=>{
    console.log("Child B rendered")
    return(
        <div>
            <h1>Count:{count}</h1>
            <button onClick={increment}>Increment</button>
        </div>
    )
}
export default ChildB;


//vs code
App.js:
import {useState} from 'react';
import ChildA from "./ChildA";
import ChildB from "./ChildB";

const Parent=()=>{
  const [count, setCount]=useState(0);
  const increment=()=>{
    setCount(c=>c+1);
  };
  return (
    <div>
      <ChildA/>
      <ChildB count={count} increment={increment}/>
    </div>
  )
};
export default Parent;

ChildA.js
const ChildA=()=>{
    console.log("Child A rendered")
        return <h2>This is Child A</h2>
}
export default ChildA;

ChildB.js:
const ChildB=({count, increment})=>{
    console.log("Child B rendered")
    return(
        <div>
            <h1>Count:{count}</h1>
            <button onClick={increment}>Increment</button>
        </div>
    )
}
export default ChildB;
